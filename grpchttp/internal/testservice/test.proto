// Copyright 2023 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package ericchiang.protorest.internal.testservice;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service Test {
  rpc GetItem(GetItemRequest) returns(Item) {
    option (google.api.http) = { get: "/v1/items/{name=*}" };
  } 

  rpc CreateItem(CreateItemRequest) returns(Item) {
    option (google.api.http) = { 
      post: "/v1/items"
      body: "item"
      additional_bindings: {
        post: "/test_body_star"
        body: "*"
      }
      additional_bindings: {
        put: "/test_put"
        body: "item"
      }
      additional_bindings: {
        patch: "/test_patch"
        body: "item"
      }
      additional_bindings: {
        custom: {
          kind: "CUSTOMMETHOD"
          path: "/test_custom"
        }
        body: "item"
      }
    };
  }

  rpc ListItems(google.protobuf.Empty) returns(ListItemsResponse) {
    option (google.api.http) = { get: "/v1/items" };
  } 

  rpc TestResponseBody(google.protobuf.Empty) returns(TestResponseBodyResponse) {
    option (google.api.http) = {
      get: "/test_response_body"
      response_body: "response"
    };
  }
}

// Item is a foo.
message Item {
// Bar
  string name = 1;
  int64 id = 2;
  ItemKind kind = 3;
}

enum ItemKind {
  ITEM_KIND_UNSPECIFIED = 0;
  WIDGET = 1;
  GADGET = 2;
};

message Filter {
  int64 id = 1;
  ItemKind kind = 2;
}

message GetItemRequest {
  string name = 1;
  Filter filter = 2;
}

message CreateItemRequest {
  Item item = 1;
}

message ListItemsResponse {
  repeated Item items = 1;
}

message TestResponseBodyResponse {
  message Response {
    string name = 1;
  }
  Response response = 1;
}
